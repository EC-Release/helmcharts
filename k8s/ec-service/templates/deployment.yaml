apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ec-service.fullname" . }}
  labels:
    {{- include "ec-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.global.ecServiceK8Config.replicaCount | default 2 }}
  selector:
    matchLabels:
      {{- include "ec-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ec-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: svc-mount
          persistentVolumeClaim:
            claimName: {{ .Values.global.efsPersistence.pvc }}
        - name: ec-certs
          configMap:
            name: {{ .Values.global.ecCertsConfigmapName }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: svc-mount
              mountPath: {{ .Values.global.efsPersistence.mountPath }}
              subPath: {{ .Values.global.efsPersistence.subPath }}
#            This needs to be enabled once root certs files in service-update repo has write permissions
#            - name: ec-certs
#              mountPath: "/root/service1.1"
#              readOnly: true
          ports:
            - name: http
              containerPort: {{ .Values.global.ecServiceK8Config.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /v1/info/
              port: http
          readinessProbe:
            httpGet:
              path: /v1/info/
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: EC_CID
              valueFrom:
                secretKeyRef:
                  name: ec-secrets
                  key: cid
            - name: EC_CSC
              valueFrom:
                secretKeyRef:
                  name: ec-secrets
                  key: csc
            - name: EC_PRVT_PWD
              valueFrom:
                secretKeyRef:
                  name: ec-secrets
                  key: ecPvtPwd
            {{- range (split "\n" .Values.global.ecServiceConfig) }}
            {{- $a := splitn "=" 2 . }}
            {{- if and (not (eq $a._1 "")) ($a._1) }}
            - name: {{ $a._0|quote }}
              value: {{ $a._1|quote }}
            {{- end }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
